AWSTemplateFormatVersion: 2010-09-09
Description: Loyalty Report and Monitors Foundation Pipeline - Full Deploy - 
Parameters:
  PipelineBucketName:
    Type: String
    Default: loyalty-ops-foundation-pipeline

  DeploymentBucketName:
    Type: String
    AllowedPattern: '[A-Za-z0-9.@\-_]+'
    Default: loyalty-ops-foundation-full-deploy-assets

  GitHubOwner:
    Type: String
    AllowedPattern: '[A-Za-z0-9.@\-_]+'
    Default: skechers

  GitHubFoundationRepository:
    Type: String
    AllowedPattern: '[A-Za-z0-9.@\-_]+'
    Default: loyalty-ops-foundation

  GitHubModulesLayerRepository:
    Type: String
    AllowedPattern: '[A-Za-z0-9.@\-_]+'
    Default: loyalty-ops-layer-modules

  GitHubConfigLayerRepository:
    Type: String
    AllowedPattern: '[A-Za-z0-9.@\-_]+'
    Default: loyalty-ops-layer-config

  GitHubUtilitiesLayerRepository:
    Type: String
    AllowedPattern: '[A-Za-z0-9.@\-_]+'
    Default: loyalty-ops-layer-utilities

  GitHubBranch:
    Type: String
    AllowedPattern: '[A-Za-z0-9.@\-_]+'
    Default: master

  CodeBuildEnvironmentType:
    Type: String
    Default: 'LINUX_CONTAINER'

  CodeBuildEnvironmentComputeType:
    Type: String
    Default: 'BUILD_GENERAL1_SMALL'
    
  CodeBuildEnvironmentImage:
    Type: String
    Default: 'aws/codebuild/amazonlinux2-x86_64-standard:4.0'

Resources:
  CodePipelineArtifactStore:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref PipelineBucketName
      VersioningConfiguration:
        Status: Enabled

  CodeBuildGitHubSourceCredential:
    Type: 'AWS::CodeBuild::SourceCredential'
    Properties:
      AuthType: PERSONAL_ACCESS_TOKEN
      ServerType: GITHUB
      Token: >-
        {{resolve:secretsmanager:GITHUB_ACCESS_SKX_OPS:SecretString:GITHUB_ACCESS_TOKEN}}
  
  CodeBuildProjectBuild:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub '${AWS::StackName}-repos'
      ServiceRole: !GetAtt 
        - CodeBuildServiceRole
        - Arn

      Source:
        Type: GITHUB
        Location: !Sub 'https://github.com/${GitHubOwner}/${GitHubFoundationRepository}.git'
        Auth:
          Type: OAUTH
          Resource: !Ref CodeBuildGitHubSourceCredential
      SecondarySources:
        - Type: GITHUB
          Location: !Sub >-
            https://github.com/${GitHubOwner}/${GitHubModulesLayerRepository}.git
          SourceIdentifier: SourceCode2
          Auth:
            Type: OAUTH
            Resource: !Ref CodeBuildGitHubSourceCredential
        - Type: GITHUB
          Location: !Sub 'https://github.com/${GitHubOwner}/${GitHubConfigLayerRepository}.git'
          SourceIdentifier: SourceCode3
          Auth:
            Type: OAUTH
            Resource: !Ref CodeBuildGitHubSourceCredential
        - Type: GITHUB
          Location: !Sub >-
            https://github.com/${GitHubOwner}/${GitHubUtilitiesLayerRepository}.git
          SourceIdentifier: SourceCode4
          Auth:
            Type: OAUTH
            Resource: !Ref CodeBuildGitHubSourceCredential

      Artifacts:
        Type: NO_ARTIFACTS
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: >-
                PULL_REQUEST_MERGED
            - Type: BASE_REF
              Pattern: !Sub '^refs/heads/${GitHubBranch}$'
              
      Environment:
        Type: !Ref CodeBuildEnvironmentType
        ComputeType: !Ref CodeBuildEnvironmentComputeType
        Image: !Ref CodeBuildEnvironmentImage
        EnvironmentVariables:
          - Name: ENV_NAME
            Type: PLAINTEXT
            Value: repos
          - Name: DEPLOYMENT_BUCKET
            Type: PLAINTEXT
            Value: !Ref DeploymentBucketName
          - Name: STACK_NAME
            Type: PLAINTEXT
            Value: '${AWS::StackName}-source'
          - Name: SourceCode1
            Type: PLAINTEXT
            Value: loyalty-ops-foundation
          - Name: SourceCode2
            Type: PLAINTEXT
            Value: loyalty-ops-layer-modules
          - Name: SourceCode3
            Type: PLAINTEXT
            Value: loyalty-ops-layer-config
          - Name: SourceCode4
            Type: PLAINTEXT
            Value: loyalty-ops-layer-utilities

  CodeBuildProjectDeployProduction:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub '${AWS::StackName}-deploy-prd'
      ServiceRole: !GetAtt 
        - CodeBuildServiceRole
        - Arn
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref CodeBuildEnvironmentType
        ComputeType: !Ref CodeBuildEnvironmentComputeType
        Image: !Ref CodeBuildEnvironmentImage
        EnvironmentVariables:
          - Name: ENV_NAME
            Type: PLAINTEXT
            Value: prd
          - Name: DEPLOYMENT_BUCKET
            Type: PLAINTEXT
            Value: !Ref DeploymentBucketName
          - Name: STACK_NAME
            Type: PLAINTEXT
            Value: '${AWS::StackName}-deploy-prd'
          - Name: SourceCode1
            Type: PLAINTEXT
            Value: loyalty-ops-foundation
          - Name: SourceCode2
            Type: PLAINTEXT
            Value: loyalty-ops-layer-modules
          - Name: SourceCode3
            Type: PLAINTEXT
            Value: loyalty-ops-layer-config
          - Name: SourceCode4
            Type: PLAINTEXT
            Value: loyalty-ops-layer-utilities

  CodePipelineWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: >-
          {{resolve:secretsmanager:GITHUB_ACCESS_SKX_OPS:SecretString:GITHUB_ACCESS_TOKEN}}
      RegisterWithThirdParty: 'true'
      Filters:
        - JsonPath: $.ref
          MatchEquals: 'refs/heads/{Branch}'
        - JsonPath: $.repository.name
          MatchEquals: '{Repo}'
      TargetPipeline: !Ref CodePipeline
      TargetAction: foundation_repo
      TargetPipelineVersion: !GetAtt 
        - CodePipeline
        - Version

  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !Ref 'AWS::StackName'
      RoleArn: !GetAtt 
        - CodePipelineServiceRole
        - Arn
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineArtifactStore

      Stages:
        - Name: Fetch_Repos
          Actions:

            - Name: foundation_repo
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubFoundationRepository
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: >-
                  {{resolve:secretsmanager:GITHUB_ACCESS_SKX_OPS:SecretString:GITHUB_ACCESS_TOKEN}}
              OutputArtifacts:
                - Name: SourceCode1

            - Name: modules-layer-repo
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubModulesLayerRepository
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: >-
                  {{resolve:secretsmanager:GITHUB_ACCESS_SKX_OPS:SecretString:GITHUB_ACCESS_TOKEN}}
              OutputArtifacts:
                - Name: SourceCode2

            - Name: config-layer-repo
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubConfigLayerRepository
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: >-
                  {{resolve:secretsmanager:GITHUB_ACCESS_SKX_OPS:SecretString:GITHUB_ACCESS_TOKEN}}
              OutputArtifacts:
                - Name: SourceCode3

            - Name: utilities-layer-repo
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubUtilitiesLayerRepository
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: >-
                  {{resolve:secretsmanager:GITHUB_ACCESS_SKX_OPS:SecretString:GITHUB_ACCESS_TOKEN}}
              OutputArtifacts:
                - Name: SourceCode4

        - Name: Full_Release
          Actions:
            - InputArtifacts:
                - Name: SourceCode1
                - Name: SourceCode2
                - Name: SourceCode3
                - Name: SourceCode4
              Name: Deploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProjectDeployProduction
                PrimarySource: SourceCode1

  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: loyalty-opsLambdaFoundationPipelineServiceRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 's3:PutObject'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
                Effect: Allow
              - Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                Resource: '*'
                Effect: Allow

  CodeBuildServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: loyalty-opsLambdaFoundationCodeBuildServiceRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:CreateFunction'
                  - 'lambda:DeleteFunction'
                  - 'lambda:GetFunction'
                  - 'lambda:PublishLayerVersion'
                  - 'lambda:GetLayerVersion'
                  - 'lambda:AddPermission'
                  - 'lambda:RemovePermission'
                  - 'lambda:GetFunctionConfiguration'
                  - 'lambda:UpdateFunctionConfiguration'
                  - 'lambda:ListTags'
                  - 'lambda:TagResource'
                  - 'lambda:UntagResource'
                  - 'lambda:UpdateFunctionCode'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'iam:GetRole'
                  - 'iam:CreateRole'
                  - 'iam:DeleteRole'
                  - 'iam:PassRole'
                  - 'iam:PutRolePolicy'
                  - 'iam:DetachRolePolicy'
                  - 'iam:AttachRolePolicy'
                  - 'iam:DeleteRolePolicy'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:PutObject'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                  - 's3:CreateBucket'
                  - 's3:DeleteBucket'
                  - 's3:PutBucketNotification'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:ListStacks'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:ValidateTemplate'
                  - 'cloudformation:DescribeStackResource'
                  - 'cloudformation:DescribeStackEvents'
                  - 'cloudformation:GetTemplateSummary'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'events:PutTargets'
                  - 'events:PutRule'
                  - 'events:DescribeRule'
                Resource: '*'
                Effect: Allow