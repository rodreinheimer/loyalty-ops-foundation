name: Full Deploy
on:
  pull_request:
    types: 
      - opened

    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    environment: develop
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      PR_NUMBER: ${{ github.event.number }}

    steps:
      - name: List Root Directory
        run: echo "Add label to PR - ${{ vars.APP_DEPLOYING_LABEL }}"

      - name: Output GitHub context
        run: echo "${{ toJSON(github) }}"

      - name: Add label to PR
        if: env.PR_NUMBER
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let issue_number = ${{ env.PR_NUMBER }};
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              color: "f29513",
              labels: ['${{ vars.APP_DEPLOYING_LABEL }}']
            });

      - name: Get Fundation Repo
        uses: actions/checkout@v4
        with:
          path: build/loyalty-ops-layer-foundation

      - name: Checkout Configuration Repo
        uses: actions/checkout@v4
        with:
          repository: rodreinheimer/loyalty-ops-layer-config
          path: build/loyalty-ops-layer-foundation/layers/loyalty-ops-layer-config

      # Deploy to AWS CloudFormation CAPABILITY_NAMED_IAM
      - name: Deploy to AWS Sam Deploy
        uses: aws-actions/setup-sam@v2
      - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --parameter-overrides EnvType=${{ vars.ENV_NAME }} --template build/loyalty-ops-layer-foundation/template.yml --stack-name ${{ vars.STACK_NAME }} --s3-bucket ${{ vars.DEPLOYMENT_BUCKET }} --region ${{ env.AWS_REGION }} --capabilities CAPABILITY_IAM

      - name: Successful Deploy
        if: success() && env.PR_NUMBER
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let fs = require('fs');
            let issue_number = ${{ env.PR_NUMBER }};
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: `App build complete`
            });
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              name: '${{ vars.APP_DEPLOYING_LABEL }}'
            });
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              color: "12802b",
              labels: ['${{ vars.APP_DEPLOYED_LABEL }}']
            });

      - name: Failed Deploy
        if: failure() && env.PR_NUMBER
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let fs = require('fs');
            let issue_number = ${{ env.PR_NUMBER }};
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: `App build failed`
            });
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              name: '${{ vars.APP_DEPLOYING_LABEL }}'
            });
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              color: "e32a27",
              labels: ['${{ vars.APP_FAILURE_LABEL }}']
            });